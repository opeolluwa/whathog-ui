import{s as k,d as C,x as v,y as L,z as S,o as h,c as w,A as g,n as q,g as x,B as E,C as N,r as T,a as B,w as O,p as A,e as z,f as u,_ as P}from"./index.23bbb581.js";const D="/assets/google.f6a70963.png",j="/assets/github.3008ff9d.png",R="/assets/twitter.a41586f6.png";Object.freeze({__proto__:null});var _={library:"https://accounts.google.com/gsi/client",defaultButtonConfig:{theme:"outline",size:"large"},scopes:"email profile openid"};const r=k({clientId:null,popupType:"CODE",prompt:!1,autoLogin:!1,idConfiguration:null,buttonConfig:_.defaultButtonConfig,callback:()=>{},error:null}),p=k({apiLoaded:!1,apiLoadIntitited:!1}),G=e=>{try{const o=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),n=decodeURIComponent(atob(o).split("").map(function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(n)}catch{throw"JWT provided is invalid"}},V=new Promise(e=>{const o=typeof window<"u";if(!p.apiLoadIntitited&&o){const n=document.createElement("script");p.apiLoadIntitited=!0,n.addEventListener("load",()=>{p.apiLoaded=!0,e(window.google)}),n.src=_.library,n.async=!0,n.defer=!0,document.head.appendChild(n)}}),f=e=>{p.apiLoadIntitited?p.apiLoaded?e(window.google):N(()=>p.apiLoaded,o=>{o&&e(window.google)}):V.then(o=>{e(o)})},$=(e,o,n,t)=>{if(!e.client_id)throw new Error("Prop client id required since plugin is not initialized with a client id");f(()=>{((i,d,s,a,c)=>{if(c){const b=i.callback;i.callback=m=>{m.credential?b&&b(m):c(m)}}window.google.accounts.id.initialize(i);const l=d.value;l&&!a&&window.google.accounts.id.renderButton(l,s)})(e,o,n.buttonConfig,t,n.error),n.prompt&&M({clientId:n.clientId,callback:n.callback,error:n.error,autoLogin:n.autoLogin})})},F=e=>new Promise((o,n)=>{f(t=>{if(!(e&&e.clientId||r.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");t.accounts.oauth2.initCodeClient({client_id:e&&e.clientId||r.clientId||"",scope:_.scopes,ux_mode:"popup",callback:i=>{i.code?o(i):n(i)}}).requestCode()})}),J=e=>new Promise((o,n)=>{f(t=>{if(!(e&&e.clientId||r.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");t.accounts.oauth2.initTokenClient({client_id:e&&e.clientId||r.clientId||"",scope:_.scopes,callback:i=>{i.access_token?o(i):n(i)}}).requestAccessToken()})}),M=e=>{if(!e&&(e={}),!e.clientId&&!r.clientId)throw new Error("clientId is required");const o={};return e.clientId&&(o.client_id=e.clientId),!e.clientId&&r.clientId&&(o.client_id=r.clientId),e.context&&(o.context=e.context),e.autoLogin!=null&&(o.auto_select=e.autoLogin),e.cancelOnTapOutside!=null&&(o.cancel_on_tap_outside=e.cancelOnTapOutside),new Promise((n,t)=>{o.callback=i=>{e&&e.callback&&e.callback(i),i.credential?n(i):t(i)},f(i=>{i.accounts.id.initialize(o),i.accounts.id.prompt(d=>{e&&e.onNotification&&e.onNotification(d),(s=>{const a=s.notification;let c="";a.isNotDisplayed()&&(c=a.getNotDisplayedReason()==="suppressed_by_user"?"Prompt was suppressed by user'. Refer https://developers.google.com/identity/gsi/web/guides/features#exponential_cooldown for more info":`Prompt was not displayed, reason for not displaying: ${a.getNotDisplayedReason()}`),a.isSkippedMoment()&&(c=`Prompt was skipped, reason for skipping: ${a.getSkippedReason()}`),c.length&&(s.error?s.error(c):s.reject(c))})({notification:d,reject:t,error:e&&e.error})})})})};var y=C({name:"GoogleLogin",props:{clientId:{type:String,required:!1},prompt:{type:Boolean,required:!1,default:!1},autoLogin:{type:Boolean,required:!1,default:!1},popupType:{type:String,required:!1,default:"CODE"},idConfiguration:{type:Object,required:!1},buttonConfig:{type:Object,required:!1},callback:{type:Function,required:!1},error:{type:Function,required:!1}},setup(e){const o=e,n=!!v().default,t=((s,a)=>{const c={...s};for(const l in a)a[l]!==void 0&&a[l]!==null&&(c[l]=a[l]);return c})(r,o),i={client_id:t.clientId||null,auto_select:t.autoLogin||!1,callback:t.callback,...t.idConfiguration},d=L();return S(()=>{$(i,d,t,n)}),(s,a)=>(h(),w("div",{class:E(["g-btn-wrapper",[!g(p).apiLoaded&&"api-loading"]]),onClick:a[0]||(a[0]=c=>g(n)&&void(g(t).popupType==="TOKEN"?J({clientId:t.clientId}).then(l=>{t.callback&&t.callback(l)}):F({clientId:t.clientId}).then(l=>{t.callback&&t.callback(l)})))},[g(n)?q("v-if",!0):(h(),w("span",{key:0,ref_key:"buttonRef",ref:d,class:"g-btn"},null,512)),x(s.$slots,"default")],2))}});(function(e,o){o===void 0&&(o={});var n=o.insertAt;if(e&&typeof document<"u"){var t=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css",n==="top"&&t.firstChild?t.insertBefore(i,t.firstChild):t.appendChild(i),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(document.createTextNode(e))}})(`
.g-btn-wrapper[data-v-5e610566] {
  display: inline-block;
}
.g-btn-wrapper.api-loading[data-v-5e610566] {
  opacity: 0.5;
  pointer-events: none;
}
`),y.__scopeId="data-v-5e610566",y.__file="src/plugin/GoogleLogin.vue";const I=e=>(A("data-v-47885c77"),e=e(),z(),e),H={class:"social__login__icons d-non"},K=I(()=>u("div",{class:"icon"},[u("img",{src:D,alt:"google"})],-1)),U=I(()=>u("div",{class:"icon"},[u("img",{src:j,alt:"github"})],-1)),W=I(()=>u("div",{class:"icon"},[u("img",{src:R,alt:"twitter"})],-1)),Q=C({__name:"SocialAccountAuth",setup(e){const o=n=>{const t=G(n.credential);console.log("Handle the userData",t)};return(n,t)=>{const i=T("GoogleLogin");return h(),w("div",H,[B(i,{callback:o},{default:O(()=>[K]),_:1}),U,W])}}});const Y=P(Q,[["__scopeId","data-v-47885c77"]]);export{Y as S};
